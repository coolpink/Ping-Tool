<?php

/**
 * PluginPath
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginPath extends BasePath
{

  private $_fullurl;

  public function getFullUrl()
  {
    if ($this->_fullurl === null)
    {
      $parent = $this->getParentNode();
      if ($parent != null)
      {
        $parentUrl = $parent->getFullUrl();
        $currentSlug = trim($this->getMetaPath());
        $this->_fullurl = $parentUrl . ($currentSlug != "" ? $currentSlug . "/" : "");
      }
      else
      {
        $this->_fullurl = trim($this->getMetaPath());
      }
      if (substr($this->_fullurl, -1) != "/")
      {
        $this->_fullurl .= "/";
      }
    }
    return $this->_fullurl;
  }

  public function getParentNode()
  {
    if (!$this->getNode()->isValidNode() || $this->getNode()->isRoot())
    {
      return null;
    }
    return $this->getNode()->getParent();
  }

  public function getParent()
  {
    if ($parent = $this->getParentNode())
    {
      return $parent['id'];
    }
    return null;
  }

  public function getObject()
  {
    return $this->getRelatedObject();
  }

  public function getRelatedObject()
  {
	$q = Doctrine_Core::getTable($this->getTemplateType())->createQuery()
		->where('id = ?', $this->getObjectId())
		->limit(1);
	//$q->useResultCache(true);

	return $q->fetchOne();
  }

  public function getFormattedTemplateType()
  {
    return Doctrine_Core::getTable("Path")->getFormattedTemplateType($this->getTemplateType());
  }

  public function getParentDisplayName()
  {
    if ($parent = $this->getParentNode())
    {
      return $parent->getMetaNavigationTitle();
    }
    else {
      if ($parent_id = sfContext::getInstance()->getRequest()->getParameter("parent"))
      {
        if ($parentNode = Doctrine_Core::getTable("Path")->find($parent_id))
        {
          return $parentNode->getMetaNavigationTitle();
        }
      }
    }
    return null;
  }

  public function getIndentedName()
  {
    return str_repeat('- ', $this['level']) . $this['title'];
  }

  public function preDelete($event)
  {
    $this->getRelatedObject()->delete();
  }

  public function __toString()
  {
    return $this->getMetaNavigationTitle();
  }

  public function getChildrenQuery($type = null, $include_invisible = true, $path = null)
  {
    $depth = 1;
    $node = $this->getNode();

    $tree = $this->getTable()->getTree();

    $baseAlias = $tree->getBaseAlias();
    $q = $tree->getBaseQuery();
    $params = array($this->get('lft'), $this->get('rgt'));

    if (false /*$includeNode*/)
    {
      $q->addWhere("$baseAlias.lft >= ? AND $baseAlias.rgt <= ?", $params)->addOrderBy("$baseAlias.lft asc");
    }
    else
    {
      $q->addWhere("$baseAlias.lft > ? AND $baseAlias.rgt < ?", $params)->addOrderBy("$baseAlias.lft asc");
    }
    if ($depth !== null)
    {
      $q->addWhere("$baseAlias.level <= ?", $node->getLevel() + $depth);
    }
    if ($type != null)
    {
      $q->addWhere("$baseAlias.template_type = ?", $type);
    }
    if (!$include_invisible)
    {
      $q->addWhere("$baseAlias.meta_visible_in_navigation = ?", false);
    }
    if ($path != null)
    {
      $q->addWhere("$baseAlias.meta_path = ?", $path);
    }
    $q = $tree->returnQueryWithRootId($q, $node->getRootValue());

	//$q->useResultCache(true);

    return $q;
  }


}
